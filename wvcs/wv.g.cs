// <auto-generated>
// This code is generated by csbindgen.
// DON'T CHANGE THIS DIRECTLY.
// </auto-generated>
#pragma warning disable CS8500
#pragma warning disable CS8981
using System;
using System.Runtime.InteropServices;


namespace WeaveCS
{
    using EntityId = uint;

    internal struct Weave;

    internal enum Datatype
    {
        Entity,
        Int,
        Float,
        Bool,
        String,
    }

    internal static unsafe partial class WVG
    {
        const string __DllName = "wv";

        [DllImport(__DllName, EntryPoint = "wv_new_weave", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern Weave* wv_new_weave();

        [DllImport(__DllName, EntryPoint = "wv_free_weave", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void wv_free_weave(Weave* weave);

        [DllImport(__DllName, EntryPoint = "wv_new_knot", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern nuint wv_new_knot(Weave* wv);

        [DllImport(__DllName, EntryPoint = "wv_new_arrow", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern nuint wv_new_arrow(Weave* wv, nuint src, nuint tgt);

        [DllImport(__DllName, EntryPoint = "wv_new_mark", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern nuint wv_new_mark(Weave* wv, nuint tgt);

        [DllImport(__DllName, EntryPoint = "wv_new_tether", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern nuint wv_new_tether(Weave* wv, nuint src);

        [DllImport(__DllName, EntryPoint = "wv_src", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern nuint wv_src(Weave* wv, nuint id);

        [DllImport(__DllName, EntryPoint = "wv_tgt", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern nuint wv_tgt(Weave* wv, nuint id);

        [DllImport(__DllName, EntryPoint = "wv_change_src", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void wv_change_src(Weave* wv, nuint id, nuint src);

        [DllImport(__DllName, EntryPoint = "wv_change_tgt", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void wv_change_tgt(Weave* wv, nuint id, nuint tgt);

        [DllImport(__DllName, EntryPoint = "wv_change_ends", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void wv_change_ends(Weave* wv, nuint id, nuint src, nuint tgt);

        [DllImport(__DllName, EntryPoint = "wv_is_knot", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.U1)]
        internal static extern bool wv_is_knot(Weave* wv, nuint id);

        [DllImport(__DllName, EntryPoint = "wv_is_arrow", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.U1)]
        internal static extern bool wv_is_arrow(Weave* wv, nuint id);

        [DllImport(__DllName, EntryPoint = "wv_is_mark", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.U1)]
        internal static extern bool wv_is_mark(Weave* wv, nuint id);

        [DllImport(__DllName, EntryPoint = "wv_is_tether", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.U1)]
        internal static extern bool wv_is_tether(Weave* wv, nuint id);

        [DllImport(__DllName, EntryPoint = "wv_is_valid", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.U1)]
        internal static extern bool wv_is_valid(Weave* wv, nuint id);

        [DllImport(__DllName, EntryPoint = "wv_is_nil", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.U1)]
        internal static extern bool wv_is_nil(Weave* wv, nuint id);

        [DllImport(__DllName, EntryPoint = "wv_delete_cascade", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void wv_delete_cascade(Weave* wv, nuint* id);

        [DllImport(__DllName, EntryPoint = "wv_delete_orphan", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void wv_delete_orphan(Weave* wv, nuint* id);

        [DllImport(__DllName, EntryPoint = "wv_def_data", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern ulong wv_def_data(Weave* wv, byte* name, WvDataField* datatype, nuint len);

        [DllImport(__DllName, EntryPoint = "wv_get_data_id", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern ulong wv_get_data_id(Weave* wv, byte* name);

        [DllImport(__DllName, EntryPoint = "wv_get_data_field_count", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern nuint wv_get_data_field_count(Weave* wv, byte* name);

        [DllImport(__DllName, EntryPoint = "wv_get_data_field", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern WvDataField wv_get_data_field(Weave* wv, byte* name, nuint index);

        [DllImport(__DllName, EntryPoint = "wv_add_component", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void wv_add_component(Weave* wv, nuint entity, byte* name, void** fields);

        [DllImport(__DllName, EntryPoint = "wv_has_component", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.U1)]
        internal static extern bool wv_has_component(Weave* wv, nuint entity, byte* name);

        [DllImport(__DllName, EntryPoint = "wv_get_component_field", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void* wv_get_component_field(Weave* wv, nuint entity, byte* name, nuint index);

        [DllImport(__DllName, EntryPoint = "wv_remove_component", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void wv_remove_component(Weave* wv, nuint entity, byte* name);

        [DllImport(__DllName, EntryPoint = "wv_shape__parent", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void wv_shape__parent(Weave* wv, nuint root, nuint len, nuint* children);

        [DllImport(__DllName, EntryPoint = "wv_shape__pivot", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void wv_shape__pivot(Weave* wv, nuint center, nuint len, nuint* children);

        [DllImport(__DllName, EntryPoint = "wv_shape__connect", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void wv_shape__connect(Weave* wv, nuint source, nuint len, nuint* targets);

        [DllImport(__DllName, EntryPoint = "wv_shape__hoist", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void wv_shape__hoist(Weave* wv, nuint subject, nuint len, nuint* objects);

        [DllImport(__DllName, EntryPoint = "wv_shape__lift", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void wv_shape__lift(Weave* wv, nuint len, nuint* arrows);

        [DllImport(__DllName, EntryPoint = "wv_shape__lower", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void wv_shape__lower(Weave* wv, nuint len, nuint* arrows);

        [DllImport(__DllName, EntryPoint = "wv_move__deps", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern WvEntityArray wv_move__deps(Weave* wv, nuint len, nuint* it);

        [DllImport(__DllName, EntryPoint = "wv_move__arrows", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern WvEntityArray wv_move__arrows(Weave* wv, nuint len, nuint* it);

        [DllImport(__DllName, EntryPoint = "wv_move__arrows_in", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern WvEntityArray wv_move__arrows_in(Weave* wv, nuint len, nuint* it);

        [DllImport(__DllName, EntryPoint = "wv_move__arrows_out", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern WvEntityArray wv_move__arrows_out(Weave* wv, nuint len, nuint* it);

        [DllImport(__DllName, EntryPoint = "wv_move__marks", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern WvEntityArray wv_move__marks(Weave* wv, nuint len, nuint* it);

        [DllImport(__DllName, EntryPoint = "wv_move__tethers", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern WvEntityArray wv_move__tethers(Weave* wv, nuint len, nuint* it);

        [DllImport(__DllName, EntryPoint = "wv_move__to_src", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern WvEntityArray wv_move__to_src(Weave* wv, nuint len, nuint* it);

        [DllImport(__DllName, EntryPoint = "wv_move__to_tgt", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern WvEntityArray wv_move__to_tgt(Weave* wv, nuint len, nuint* it);

        [DllImport(__DllName, EntryPoint = "wv_move__prev", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern WvEntityArray wv_move__prev(Weave* wv, nuint it);

        [DllImport(__DllName, EntryPoint = "wv_move__prev_n", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern WvEntityArray wv_move__prev_n(Weave* wv, nuint len, nuint* it);

        [DllImport(__DllName, EntryPoint = "wv_move__next", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern WvEntityArray wv_move__next(Weave* wv, nuint it);

        [DllImport(__DllName, EntryPoint = "wv_move__next_n", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern WvEntityArray wv_move__next_n(Weave* wv, nuint len, nuint* it);

        [DllImport(__DllName, EntryPoint = "wv_move__down", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern WvEntityArray wv_move__down(Weave* wv, nuint it);

        [DllImport(__DllName, EntryPoint = "wv_move__down_n", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern WvEntityArray wv_move__down_n(Weave* wv, nuint len, nuint* it);

        [DllImport(__DllName, EntryPoint = "wv_move__up", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern WvEntityArray wv_move__up(Weave* wv, nuint it);

        [DllImport(__DllName, EntryPoint = "wv_move__up_n", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern WvEntityArray wv_move__up_n(Weave* wv, nuint len, nuint* it);

        [DllImport(__DllName, EntryPoint = "wv_search__find_one", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern WvEntityArray wv_search__find_one(Weave* wv, nuint hoisted_pattern, nuint hoisted_target, nuint* size, nuint* count);

        [DllImport(__DllName, EntryPoint = "wv_search__find_all", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern WvEntityArray wv_search__find_all(Weave* wv, nuint hoisted_pattern, nuint hoisted_target, nuint* size, nuint* count);

        [DllImport(__DllName, EntryPoint = "wv_replace__replace", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern EntityId wv_replace__replace(Weave* wv, nuint hoisted_pattern, nuint hoisted_goal, nuint hoisted_target);

        [DllImport(__DllName, EntryPoint = "wv_serialize", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern WvByteArray wv_serialize(Weave* wv, nuint id);

        [DllImport(__DllName, EntryPoint = "wv_deserialize", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern EntityId wv_deserialize(Weave* wv, nuint len, byte* it);


    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct WvDataField
    {
        public byte* name;
        public Datatype datatype;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct WvEntityArray
    {
        public nuint len;
        public nuint* ptr;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct WvByteArray
    {
        public nuint len;
        public byte* ptr;
    }



}
